from django.db import models
from hashlib import sha1

# Create your models here.
class Link(models.Model):
    created_at = models.DateTimeField(auto_now_add=True)

    title = models.CharField(max_length=255)
    collect_extended_data = models.BooleanField(default=False)
    short_id = models.CharField(max_length=6, unique=True)
    destination = models.URLField()

    def __str__(self):
        return "{} ({})".format(self.short_id, self.destination)

    def get_absolute_url(self):
        from django.urls import reverse

        return reverse("link-detail", kwargs={"pk": self.pk})

    def get_delete_url(self):
        from django.urls import reverse

        return reverse("delete-link", kwargs={"pk": self.pk})

    def get_redirect_url(self):
        from django.urls import reverse

        return reverse("redirect", kwargs={"short_id": self.short_id})


class Visit(models.Model):
    created_at = models.DateTimeField(auto_now_add=True)

    # Core information from the request
    link = models.ForeignKey(Link, on_delete=models.CASCADE)
    ip = models.CharField(max_length=45)
    user_agent = models.CharField(max_length=4000, null=True)
    language = models.CharField(max_length=10, null=True)

    # Generated by us
    is_bot = models.BooleanField(default=False)
    fingerprint = models.CharField(max_length=40)

    # Details from ipinfo.io
    city = models.CharField(max_length=255, null=True)
    country = models.CharField(max_length=2, null=True)
    hostname = models.CharField(max_length=255, null=True)
    latitude = models.FloatField(null=True)
    longitude = models.FloatField(null=True)

    # Details from JS fingerprint
    webdriver = models.BooleanField(null=True)
    color_depth = models.IntegerField(null=True)
    pixel_ratio = models.FloatField(null=True)
    hardware_concurrency = models.IntegerField(null=True)
    screen_x = models.IntegerField(null=True)
    screen_y = models.IntegerField(null=True)
    available_screen_x = models.IntegerField(null=True)
    available_screen_y = models.IntegerField(null=True)
    timezone = models.CharField(max_length=255, null=True)
    session_storage = models.BooleanField(null=True)
    local_storage = models.BooleanField(null=True)
    indexed_db = models.BooleanField(null=True)
    add_behavior = models.BooleanField(null=True)
    open_database = models.BooleanField(null=True)
    platform = models.CharField(max_length=255, null=True)
    webgl_vendor_and_renderer = models.CharField(max_length=255, null=True)
    touch_support = models.BooleanField(null=True)

    def save(self, *args, **kwargs):
        fingerprint_fields = bytes("".join([self.user_agent, self.ip]), encoding="utf8")
        self.fingerprint = sha1(fingerprint_fields).hexdigest()
        print(self.fingerprint)
        super().save(*args, **kwargs)  # Call the "real" save() method.

    class Meta:
        indexes = [models.Index(fields=["fingerprint"])]
