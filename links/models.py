
from django.db import models


class Link(models.Model):
    created_at = models.DateTimeField(auto_now_add=True)

    title = models.CharField(max_length=1000)
    collect_extended_data = models.BooleanField(default=True)
    short_id = models.CharField(max_length=6, unique=True)
    destination = models.URLField()

    def __str__(self):
        return "{} ({})".format(self.title, self.destination)

    def get_absolute_url(self):
        from django.urls import reverse

        return reverse("link-detail", kwargs={"pk": self.pk})

    def get_delete_url(self):
        from django.urls import reverse

        return reverse("delete-link", kwargs={"pk": self.pk})

    def get_redirect_url(self):
        from django.urls import reverse

        return reverse("redirect", kwargs={"short_id": self.short_id})


class Visit(models.Model):
    created_at = models.DateTimeField(auto_now_add=True)

    # Core information from the request
    link = models.ForeignKey(Link, on_delete=models.CASCADE)
    ip = models.CharField(max_length=1000)
    user_agent = models.CharField(max_length=4000, null=True)
    language = models.CharField(max_length=1000, null=True)
    referrer = models.CharField(max_length=1000, null=True)
    # From user agent
    device_brand = models.CharField(max_length=1000, null=True)
    device_family = models.CharField(max_length=1000, null=True)
    device_model = models.CharField(max_length=1000, null=True)
    os_family = models.CharField(max_length=1000, null=True)
    os_major = models.CharField(max_length=1000, null=True)
    os_minor = models.CharField(max_length=1000, null=True)
    os_patch = models.CharField(max_length=1000, null=True)
    browser_family = models.CharField(max_length=1000, null=True)
    browser_major = models.CharField(max_length=1000, null=True)
    browser_minor = models.CharField(max_length=1000, null=True)
    browser_patch = models.CharField(max_length=1000, null=True)

    # Generated by us
    is_bot = models.BooleanField(default=False)

    # Details from ipinfo.io
    city = models.CharField(max_length=1000, null=True)
    country = models.CharField(max_length=1000, null=True)
    hostname = models.CharField(max_length=1000, null=True)
    latitude = models.FloatField(null=True)
    longitude = models.FloatField(null=True)

    # Details from JS fingerprint
    fingerprint = models.CharField(max_length=1000)
    fingerprint_fields = models.JSONField(blank=True, default=dict)
    screen_x = models.IntegerField(null=True)
    screen_y = models.IntegerField(null=True)

    class Meta:
        indexes = [models.Index(fields=["fingerprint"])]
